name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  packages: write
  statuses: read
  issues: write

jobs:

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install dependencies
        run: |
          cd juice-shop
          npm install --no-audit --no-fund --legacy-peer-deps
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'juice-shop'
          path: "./juice-shop/"
          format: "SARIF"
          out: "./"
          args: >
            --failOnCVSS 7
            --enableRetired
            --disableArchive
      - name: Upload Dependency-Check results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: dependency-check-report.sarif

  gitleaks:
    name: Secrets Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.24.3/gitleaks_8.24.3_linux_x64.tar.gz | tar -xz
          ./gitleaks detect --source=. --redact -v --exit-code=0 --report-format=sarif --report-path=gitleaks-results.sarif
      - name: Upload Gitleaks results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: gitleaks-results.sarif

  semgrep:
    name: Static Analysis (SAST)
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        run: |
          semgrep scan --config=p/security-audit --sarif --output=semgrep-results.sarif || true
      - name: Upload Semgrep results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep-results.sarif

  build-and-scan:
    name: Build and Container Scan
    needs: [dependency-check, gitleaks, semgrep]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./juice-shop
          file: ./juice-shop/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/juice-shop:local-scan
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/juice-shop:local-scan
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "0"
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif

  # Optional DAST with ZAP, remove if not needed
  dast-scan:
    name: Dynamic Analysis (DAST)
    needs: build-and-scan
    runs-on: ubuntu-latest
    services:
      juice-shop:
        image: ghcr.io/${{ github.repository_owner }}/juice-shop:local-scan
        ports:
          - 3000:3000
        env:
          NODE_ENV: ci
          PORT: 3000
        options: >-
          --health-cmd "curl -f http://localhost:3000 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 10s
    steps:
      - name: Wait for Juice Shop to be ready
        run: |
          echo "Waiting for service..."
          timeout 300 bash -c 'until curl -s http://localhost:3000 >/dev/null; do sleep 5; done'
      - name: Run OWASP ZAP scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://juice-shop:3000"
          cmd_options: "-a -T 300"
          container_name: "juice-shop"
        continue-on-error: true

