name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  packages: write

jobs:
  semgrep:
    name: Static Analysis (Semgrep)
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        run: |
          semgrep scan --config=p/ci --sarif --output=semgrep-results.sarif || true
      - name: Upload Semgrep SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif
      - name: Upload Semgrep artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: semgrep-results.sarif

  gitleaks:
    name: Secrets Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--report-format sarif --report-path=gitleaks-results.sarif"
      - name: Upload Gitleaks SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks-results.sarif
      - name: Upload Gitleaks artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-results
          path: gitleaks-results.sarif

  build-and-scan:
    name: Dependency Scan & Image Vulnerabilities (Trivy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: docker build -t juice-shop-app ./app
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: juice-shop-app
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "0"
      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
      - name: Upload Trivy artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif

  zap-dast:
    name: Dynamic Analysis (ZAP DAST)
    runs-on: ubuntu-latest
    steps:
      - name: Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:3000'
          format: sarif
          output: zap-results.sarif
        continue-on-error: true
      - name: Upload ZAP SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: zap-results.sarif
      - name: Upload ZAP artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: zap-results.sarif
