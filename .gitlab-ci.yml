image: node:18

stages:
  - build
  - test
  - sca
  - secrets
  - sast
  - docker-image
  - dast

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# Build & Test
build:
  stage: build
  script:
    - cd app
    - npm install
    - npm run build || true

test:
  stage: test
  script:
    - cd app
    - npm test || true

# SCA - npm audit
sca:
  stage: sca
  script:
    - cd app
    - npm audit --json > audit-report.json || true
  artifacts:
    paths: [app/audit-report.json]
    expire_in: 1 week

# Secrets scan - Trufflehog
secrets:
  stage: secrets
  image: python:3.8
  script:
    - pip install trufflehog
    - trufflehog file://$(pwd) --json | tee trufflehog-output.json || true
  artifacts:
    paths: [trufflehog-output.json]
    expire_in: 1 week

# SAST - Semgrep
sast:
  stage: sast
  image: returntocorp/semgrep
  script:
    - semgrep scan --config=auto --json > semgrep-output.json || true
  artifacts:
    paths: [semgrep-output.json]
    expire_in: 1 week

# Docker image scan - Trivy
docker-image:
  stage: docker-image
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
  script:
    - docker build -t juice-shop-devsecops .
    - ./trivy image --severity HIGH,CRITICAL juice-shop-devsecops || true

# DAST - OWASP ZAP
dast:
  stage: dast
  image: owasp/zap2docker-stable
  script:
    - docker run -d -p 3000:3000 juice-shop-devsecops
    - zap-baseline.py -t http://localhost:3000 -g zap-report.html || true
  artifacts:
    paths: [zap-report.html]
    expire_in: 1 week
